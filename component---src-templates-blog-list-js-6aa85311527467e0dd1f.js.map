{"version":3,"sources":["webpack:///./src/components/date.js","webpack:///./src/components/pagination.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/components/sectiontitle.js","webpack:///./src/templates/blog-list.js","webpack:///./src/components/items-blog.js"],"names":["data","d","Date","date","getDate","month","getMonth","year","getFullYear","pageContext","type","numPages","listItems","i","push","className","currentPage","key","to","title","charAt","toUpperCase","slice","Fragment","_defineProperties","target","props","length","descriptor","enumerable","configurable","writable","Object","defineProperty","SectionTitle","state","colorPrimary","colorSecondary","_id","counter","Constructor","protoProps","staticProps","componentDidMount","this","setState","window","getComputedStyle","cp","getPropertyValue","cs","render","ref","c","width","height","viewBox","preserveAspectRatio","id","x1","x2","y1","y2","gradientUnits","stopColor","offset","textAnchor","x","y","fill","_counter","prototype","React","Component","BlogList","query","datas","allMarkdownRemark","edges","lang","BlogItem","color","textSecondary","querySelector","setAttribute","fluid","node","frontmatter","image","childImageSharp","fields","slug","aria-label","style","opacity","description","items","forEach","e","remove"],"mappings":"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","file":"component---src-templates-blog-list-js-6aa85311527467e0dd1f.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function({ data }) {\r\n    let d = new Date(data),\r\n        months = [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\"\r\n        ],\r\n        date = d.getDate(),\r\n        month = d.getMonth(),\r\n        year = d.getFullYear();\r\n    return (\r\n        <span>\r\n            {date} {months[month]} {year}\r\n        </span>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { ChevronLeft, ChevronRight } from \"./icons\";\r\nimport \"../style/pagination.less\";\r\n\r\nexport default function({ pageContext, type }) {\r\n    if (pageContext.numPages > 1) {\r\n        let listItems = [];\r\n        for (let i = 1; i <= pageContext.numPages; i++) {\r\n            listItems.push(\r\n                <li\r\n                    className={i === pageContext.currentPage ? \"active\" : \"\"}\r\n                    key={\"PaginationItem\" + i}\r\n                >\r\n                    <Link\r\n                        to={\"/\" + type + \"/\" + (i === 1 ? \"\" : i)}\r\n                        title={\r\n                            type.charAt(0).toUpperCase() +\r\n                            type.slice(1) +\r\n                            \" - Page \" +\r\n                            i\r\n                        }\r\n                        key={\"PaginationItemA\" + i}\r\n                    >\r\n                        {i}\r\n                    </Link>\r\n                </li>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"pagination\">\r\n                <ul>\r\n                    {pageContext.currentPage !== 1 && (\r\n                        <li>\r\n                            <Link\r\n                                to={\r\n                                    \"/\" +\r\n                                    type +\r\n                                    \"/\" +\r\n                                    (pageContext.currentPage - 1 === 1\r\n                                        ? \"\"\r\n                                        : pageContext.currentPage - 1)\r\n                                }\r\n                                title=\"Previous Page\"\r\n                            >\r\n                                <span className=\"icon\">\r\n                                    <ChevronLeft />\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                    {listItems}\r\n                    {pageContext.currentPage !== pageContext.numPages && (\r\n                        <li>\r\n                            <Link\r\n                                to={\r\n                                    \"/\" +\r\n                                    type +\r\n                                    \"/\" +\r\n                                    (pageContext.currentPage + 1)\r\n                                }\r\n                                title=\"Next Page\"\r\n                            >\r\n                                <span className=\"icon\">\r\n                                    <ChevronRight />\r\n                                </span>\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <React.Fragment></React.Fragment>;\r\n    }\r\n}\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import React from \"react\";\r\n\r\nclass SectionTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            colorPrimary: \"#00\",\r\n            colorSecondary: \"#00\"\r\n        };\r\n\r\n        this._id = SectionTitle.counter;\r\n    }\r\n\r\n    static get counter() {\r\n        SectionTitle._counter = (SectionTitle._counter || 0) + 1;\r\n        return SectionTitle._counter;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            colorPrimary: window\r\n                .getComputedStyle(this.cp, null)\r\n                .getPropertyValue(\"color\"),\r\n            colorSecondary: window\r\n                .getComputedStyle(this.cs, null)\r\n                .getPropertyValue(\"color\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <span ref={c => (this.cp = c)} className=\"color-primary\"></span>\r\n                <span\r\n                    ref={c => (this.cs = c)}\r\n                    className=\"color-secondary\"\r\n                ></span>\r\n                <svg\r\n                    width=\"100%\"\r\n                    height=\"150\"\r\n                    viewBox=\"0 0 100 100\"\r\n                    preserveAspectRatio=\"xMidYMid slice\"\r\n                >\r\n                    <linearGradient\r\n                        id={\"primaryGradient\" + this._id}\r\n                        x1=\"0\"\r\n                        x2=\"100%\"\r\n                        y1=\"0\"\r\n                        y2=\"0\"\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop stopColor={this.state.colorPrimary} offset=\"0%\" />\r\n                        <stop\r\n                            stopColor={this.state.colorSecondary}\r\n                            offset=\"100%\"\r\n                        />\r\n                    </linearGradient>\r\n                    <text\r\n                        textAnchor=\"middle\"\r\n                        x=\"50\"\r\n                        y=\"52\"\r\n                        fill={\"url(#primaryGradient\" + this._id + \")\"}\r\n                    >\r\n                        {this.props.title}\r\n                    </text>\r\n                </svg>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SectionTitle;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport BlogItems from \"../components/items-blog\";\r\nimport SectionTitle from \"../components/sectiontitle\";\r\nimport Pagination from \"../components/pagination\";\r\nimport SEO from \"../components/seo\";\r\n\r\nclass BlogList extends React.Component {\r\n    render() {\r\n        const query = this.props.datas;\r\n        if (query.allMarkdownRemark.edges.length > 0) {\r\n            return (\r\n                <section id=\"blog\" className=\"container\">\r\n                    <div className=\"section-title\">\r\n                        <SectionTitle title=\"BLOG\" />\r\n                    </div>\r\n                    <BlogItems data={query} />\r\n                    <Pagination\r\n                        pageContext={this.props.pageContext}\r\n                        type=\"blog\"\r\n                    />\r\n                </section>\r\n            );\r\n        } else {\r\n            return <React.Fragment></React.Fragment>;\r\n        }\r\n    }\r\n}\r\n\r\nexport default function({ data, pageContext }) {\r\n    return (\r\n        <Layout>\r\n            <SEO lang=\"en\" title=\"Blog\" />\r\n            <BlogList datas={data} pageContext={pageContext} />\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport const query = graphql`\r\n    query blogListPage($skip: Int!, $limit: Int!) {\r\n        allMarkdownRemark(\r\n            filter: { fileAbsolutePath: { regex: \"/blog/\" } }\r\n            sort: { fields: [frontmatter___date], order: DESC }\r\n            limit: $limit\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        description\r\n                        date\r\n                        image {\r\n                            publicURL\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 1920) {\r\n                                    srcSet\r\n                                    ...GatsbyImageSharpFluid\r\n                                }\r\n                                id\r\n                            }\r\n                        }\r\n                    }\r\n                    fields {\r\n                        slug\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\nimport Date from \"./date\";\r\nimport { Calendar } from \"./icons\";\r\nimport \"../style/list-blog.less\";\r\n\r\nclass BlogItem extends React.Component {\r\n    componentDidMount() {\r\n        this.color = window\r\n            .getComputedStyle(this.textSecondary, null)\r\n            .getPropertyValue(\"color\");\r\n        const calendar = this.textSecondary.querySelector(\"path\");\r\n        calendar.setAttribute(\"fill\", this.color);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item col s12 m6\">\r\n                <div className=\"box\">\r\n                    <div className=\"image\">\r\n                        <Img\r\n                            fluid={\r\n                                this.props.data.node.frontmatter.image\r\n                                    .childImageSharp.fluid\r\n                            }\r\n                        />\r\n                        <Link\r\n                            to={this.props.data.node.fields.slug}\r\n                            title={this.props.data.node.frontmatter.title}\r\n                            aria-label={this.props.data.node.frontmatter.title}\r\n                            className=\"overlay-link\"\r\n                            style={{ opacity: 0 }}\r\n                        >\r\n                            {this.props.data.node.frontmatter.title}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <h3 className=\"text-primary\">\r\n                            <Link\r\n                                to={this.props.data.node.fields.slug}\r\n                                title={this.props.data.node.frontmatter.title}\r\n                            >\r\n                                {this.props.data.node.frontmatter.title}\r\n                            </Link>\r\n                        </h3>\r\n                        <p className=\"text-tertiary\">\r\n                            {this.props.data.node.frontmatter.description}\r\n                        </p>\r\n                        <p\r\n                            className=\"date text-secondary\"\r\n                            ref={c => (this.textSecondary = c)}\r\n                        >\r\n                            <span className=\"icon\">\r\n                                <Calendar />\r\n                            </span>\r\n                            <Date\r\n                                data={this.props.data.node.frontmatter.date}\r\n                            />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function(props) {\r\n    const data = props.data.allMarkdownRemark.edges;\r\n    let items = [];\r\n    data.forEach(function(e, i) {\r\n        if (props.remove && e.node.id === props.remove) return;\r\n        items.push(<BlogItem key={e.node.id} data={e} />);\r\n    });\r\n    return <div className=\"row\">{items}</div>;\r\n}\r\n"],"sourceRoot":""}