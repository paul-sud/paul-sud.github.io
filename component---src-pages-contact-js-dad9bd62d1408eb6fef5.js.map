{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/contact.js","webpack:///./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/components/sectiontitle.js"],"names":["lang","title","style","minHeight","Contact","props","state","submitDisabled","textAreaInput","bind","handleSubmit","showContactForm","contact","api_url","event","target","height","scrollHeight","preventDefault","this","setState","body","encodeURI","dataName","value","dataEmail","dataMessage","fetch","method","then","res","json","result","resMessage","opacity","response","innerHTML","classList","add","remove","_this","setTimeout","error","componentDidMount","color","window","getComputedStyle","btn","getPropertyValue","querySelector","setAttribute","contactArea","querySelectorAll","forEach","e","i","p","render","id","className","ref","c","type","name","required","overflowY","onChange","onClick","display","description","mail","href","phone","address","whiteSpace","React","Component","query","data","site","siteMetadata","_defineProperties","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","SectionTitle","colorPrimary","colorSecondary","_id","counter","Constructor","protoProps","staticProps","cp","cs","Fragment","width","viewBox","preserveAspectRatio","x1","x2","y1","y2","gradientUnits","stopColor","offset","textAnchor","x","y","fill","_counter","prototype"],"mappings":"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","file":"component---src-pages-contact-js-dad9bd62d1408eb6fef5.js","sourcesContent":["import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport Contact from \"../components/contact\";\r\n\r\nexport default function() {\r\n    return (\r\n        <Layout>\r\n            <SEO lang=\"en\" title=\"Contact\" />\r\n            <div style={{ minHeight: \"600px\" }}>\r\n                <Contact />\r\n            </div>\r\n        </Layout>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SectionTitle from \"./sectiontitle\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport { PaperPlane, Mapmarker, Mobile, Envelope, Loading } from \"./icons\";\r\nimport SocialLinks from \"./sociallinks\";\r\nimport \"../style/contact.less\";\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            submitDisabled: false\r\n        };\r\n\r\n        this.textAreaInput = this.textAreaInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.showContactForm = true;\r\n\r\n        if (this.props.contact.api_url === \"\") {\r\n            this.showContactForm = false;\r\n        }\r\n    }\r\n\r\n    textAreaInput(event) {\r\n        event.target.style.height = \"auto\";\r\n        event.target.style.height = event.target.scrollHeight + \"px\";\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        if (!this.state.submitDisabled) {\r\n            this.setState({\r\n                submitDisabled: true\r\n            });\r\n\r\n            let name = encodeURI(this.dataName.value),\r\n                email = encodeURI(this.dataEmail.value),\r\n                message = encodeURI(this.dataMessage.value),\r\n                body = `name=${name}&email=${email}&message=${message}`;\r\n\r\n            fetch(this.props.contact.api_url, {\r\n                method: \"post\",\r\n                body: body\r\n            })\r\n                .then(function(res) {\r\n                    return res.json();\r\n                })\r\n                .then(\r\n                    result => {\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        this.resMessage.style.opacity = 1;\r\n                        if (result.response === \"error\") {\r\n                            this.resMessage.innerHTML =\r\n                                \"There was an error in sending the message\";\r\n                            this.resMessage.classList.add(\"color-error\");\r\n                        } else {\r\n                            this.resMessage.innerHTML =\r\n                                \"Message sent succesfully\";\r\n                            this.resMessage.classList.remove(\"color-error\");\r\n                        }\r\n                        this.dataName.value = \"\";\r\n                        this.dataEmail.value = \"\";\r\n                        this.dataMessage.value = \"\";\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    },\r\n                    error => {\r\n                        this.resMessage.innerHTML = \"Message sent succesfully\";\r\n                        this.resMessage.classList.remove(\"color-error\");\r\n                        this.setState({\r\n                            submitDisabled: false\r\n                        });\r\n                        let _this = this;\r\n                        setTimeout(function() {\r\n                            _this.resMessage.style.opacity = 0;\r\n                        }, 5000);\r\n                    }\r\n                );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.showContactForm) {\r\n            let color = window\r\n                .getComputedStyle(this.btn, null)\r\n                .getPropertyValue(\"color\");\r\n            this.btn.querySelector(\"path\").setAttribute(\"fill\", color);\r\n        }\r\n\r\n        let li = this.contactArea.querySelectorAll(\".item\");\r\n\r\n        li.forEach(function(e, i) {\r\n            let p = e.querySelector(\"path\");\r\n            if (p)\r\n                p.setAttribute(\r\n                    \"fill\",\r\n                    window.getComputedStyle(e, null).getPropertyValue(\"color\")\r\n                );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"contact\" className=\"container\">\r\n                <div className=\"section-title\">\r\n                    <SectionTitle title=\"CONTACT\" />\r\n                </div>\r\n                <div\r\n                    className={\"row\" + (this.showContactForm ? \"\" : \" no-form\")}\r\n                    ref={c => (this.contactArea = c)}\r\n                >\r\n                    {this.showContactForm && (\r\n                        <div className=\"col s12 m6\">\r\n                            <form>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Name\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                ref={c => (this.dataName = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"name\"\r\n                                                id=\"name\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Email\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <input\r\n                                                type=\"email\"\r\n                                                ref={c => (this.dataEmail = c)}\r\n                                                className=\"field-box\"\r\n                                                name=\"email\"\r\n                                                id=\"email\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label>\r\n                                        <span className=\"label text-tertiary\">\r\n                                            Message\r\n                                        </span>\r\n                                        <div className=\"input-border\">\r\n                                            <textarea\r\n                                                style={{ overflowY: \"hidden\" }}\r\n                                                ref={c =>\r\n                                                    (this.dataMessage = c)\r\n                                                }\r\n                                                className=\"field-box\"\r\n                                                onChange={this.textAreaInput}\r\n                                                name=\"message\"\r\n                                                id=\"message\"\r\n                                                required\r\n                                            />\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"field\">\r\n                                    <label className=\"ib\">\r\n                                        <button\r\n                                            className={\r\n                                                \"btn\" +\r\n                                                (this.state.submitDisabled\r\n                                                    ? \" disabled\"\r\n                                                    : \"\")\r\n                                            }\r\n                                            onClick={this.handleSubmit}\r\n                                            id=\"submit\"\r\n                                            ref={c => (this.btn = c)}\r\n                                        >\r\n                                            SEND{\" \"}\r\n                                            <span\r\n                                                className=\"icon paper-plane\"\r\n                                                style={{\r\n                                                    display: this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <PaperPlane />\r\n                                            </span>\r\n                                            <span\r\n                                                className=\"icon loading\"\r\n                                                style={{\r\n                                                    display: !this.state\r\n                                                        .submitDisabled\r\n                                                        ? \"none\"\r\n                                                        : \"inline-block\"\r\n                                                }}\r\n                                            >\r\n                                                <Loading />\r\n                                            </span>\r\n                                        </button>\r\n                                    </label>\r\n                                    <label>\r\n                                        <p\r\n                                            className=\"res-message\"\r\n                                            ref={c => (this.resMessage = c)}\r\n                                        ></p>\r\n                                    </label>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    )}\r\n                    <div\r\n                        className={\r\n                            this.showContactForm\r\n                                ? \"col s12 m6 details\"\r\n                                : \"col s12 details\"\r\n                        }\r\n                    >\r\n                        {this.props.contact.description && (\r\n                            <p className=\"text-tertiary\">\r\n                                {this.props.contact.description}\r\n                            </p>\r\n                        )}\r\n                        <ul>\r\n                            {this.props.contact.mail && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Envelope />\r\n                                    </span>\r\n                                    <a\r\n                                        href={\r\n                                            \"mailto:\" + this.props.contact.mail\r\n                                        }\r\n                                    >\r\n                                        {this.props.contact.mail}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.phone && (\r\n                                <li className=\"text-secondary item\">\r\n                                    <span className=\"icon\">\r\n                                        <Mobile />\r\n                                    </span>\r\n                                    <a href={\"tel:\" + this.props.contact.phone}>\r\n                                        {this.props.contact.phone}\r\n                                    </a>\r\n                                </li>\r\n                            )}\r\n                            {this.props.contact.address && (\r\n                                <li\r\n                                    className=\"text-tertiary item\"\r\n                                    style={{ whiteSpace: \"pre\" }}\r\n                                >\r\n                                    <span className=\"icon\">\r\n                                        <Mapmarker />\r\n                                    </span>\r\n                                    {this.props.contact.address}\r\n                                </li>\r\n                            )}\r\n                            <li>\r\n                                <SocialLinks />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default () => (\r\n    <StaticQuery\r\n        query={graphql`\r\n            query {\r\n                site {\r\n                    siteMetadata {\r\n                        contact {\r\n                            api_url\r\n                            description\r\n                            mail\r\n                            phone\r\n                            address\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        `}\r\n        render={data => <Contact contact={data.site.siteMetadata.contact} />}\r\n    />\r\n);\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import React from \"react\";\r\n\r\nclass SectionTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            colorPrimary: \"#00\",\r\n            colorSecondary: \"#00\"\r\n        };\r\n\r\n        this._id = SectionTitle.counter;\r\n    }\r\n\r\n    static get counter() {\r\n        SectionTitle._counter = (SectionTitle._counter || 0) + 1;\r\n        return SectionTitle._counter;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            colorPrimary: window\r\n                .getComputedStyle(this.cp, null)\r\n                .getPropertyValue(\"color\"),\r\n            colorSecondary: window\r\n                .getComputedStyle(this.cs, null)\r\n                .getPropertyValue(\"color\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <span ref={c => (this.cp = c)} className=\"color-primary\"></span>\r\n                <span\r\n                    ref={c => (this.cs = c)}\r\n                    className=\"color-secondary\"\r\n                ></span>\r\n                <svg\r\n                    width=\"100%\"\r\n                    height=\"150\"\r\n                    viewBox=\"0 0 100 100\"\r\n                    preserveAspectRatio=\"xMidYMid slice\"\r\n                >\r\n                    <linearGradient\r\n                        id={\"primaryGradient\" + this._id}\r\n                        x1=\"0\"\r\n                        x2=\"100%\"\r\n                        y1=\"0\"\r\n                        y2=\"0\"\r\n                        gradientUnits=\"userSpaceOnUse\"\r\n                    >\r\n                        <stop stopColor={this.state.colorPrimary} offset=\"0%\" />\r\n                        <stop\r\n                            stopColor={this.state.colorSecondary}\r\n                            offset=\"100%\"\r\n                        />\r\n                    </linearGradient>\r\n                    <text\r\n                        textAnchor=\"middle\"\r\n                        x=\"50\"\r\n                        y=\"52\"\r\n                        fill={\"url(#primaryGradient\" + this._id + \")\"}\r\n                    >\r\n                        {this.props.title}\r\n                    </text>\r\n                </svg>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SectionTitle;\r\n"],"sourceRoot":""}